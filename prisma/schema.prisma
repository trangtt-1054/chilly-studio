// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//model phải có ít nhất 1 unique field (@unique constraint)
model User {
  id          Int                @id @default(autoincrement())
  email       String             @unique
  firstName   String
  lastName    String
  social      Json?
  //collections        Collection[] có explicit relation rồi, ko cần implicit relation nữa
  collections CollectionByUser[] //collections là tên field mình tự đặt theo ý muốn
}

//social is a free form JSON field, we dont have to adhere to a schema, if a social network pops up, we can add fields as we like without database migration. Bình thường add new field to tables thì phải migrate

//Course
model Collection {
  id      Int                @id @default(autoincrement())
  name    String
  details String //courseDetails
  //members            User[] có explicit relation rồi, ko cần implicit relation nữa
  members CollectionByUser[]
}

model CollectionByUser {
  createdAt    DateTime   @default(now())
  role         UserRole
  userId       Int //relation scalar
  collectionId Int //relation scalar
  user         User       @relation(fields: [userId], references: [id]) //relation field
  collection   Collection @relation(fields: [collectionId], references: [id]) //relation field

  @@id([userId, collectionId, role])
}

//@relation(fields: [userId]: field `user` is associated with field `userId`, references tell us which field is it referencing in this `User` model
//@@id([userId, collectionId, role]) is PRIMARY KEY or unique constraint, @@id allow us to define multi-field primary key on a table, the combination of these field has to be unique. This constraint limits the ability to associate users to collection with a single role. For example if you have Alice with userId: 1, she can only be associated to a collection with a single role. Alice could be associated with same collection once as a member and once as a admin. Nếu mà bỏ role trong @@id thì 1 user chỉ associate duy nhất 1 lần với 1 collection thôi

enum UserRole {
  MEMBER
  ADMIN
}

//Test
model Record {
  id        Int      @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  name      String
  date      DateTime
}

//TestResult
model RecordRate {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  result    Int //precise to decimal
}
